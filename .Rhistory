length(logModel$fitted)
sup
logmModel$x
logModel$x
#----------- SARIMA (6,2,0)(1,1,0) ------------
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 2) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA620110<-arima(logphoto,order = c(6,2,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA620110$coef)/sqrt(diag(SARIMA620110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA620110<-forecast(SARIMA620110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA620110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA620110$residuals) #pacf un peu limite...
predict.SARIMA620110.residuals.norm<- (residuals(predict.SARIMA620110)-mean(residuals(predict.SARIMA620110)))/sd(residuals(predict.SARIMA620110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA620110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA620110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA620110.residuals.norm) # OK
kpss.test(predict.SARIMA620110.residuals.norm) # OK
shapiro.test(predict.SARIMA620110.residuals.norm) # KO
#---- Affichage ----
logModel<-predict.SARIMA620110
logModel$x
logModel$fitted
logModel$mean
supError <- sup - logModel$mean
sup <- logModel$upper
inf <- logModel$lower
supError <- sup - logModel$mean
supError
ToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
TEST <- ToExp(SARIMA620110)
rm(list=ls())
ToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
rm(ToExp)
LogToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
#### On en profite pour mettre en place les packages et les seeds.
library(knitr)
library(magrittr)
library(dplyr)
library(corrplot)
library(forecast)
library(gridExtra)
library(grid)
library(gridExtra)
library(ggplot2)
library(tseries)
library(broom)
library(lattice)
LogToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
#fonctions utiles
ts.affichage <- function(ts, lag.max = 48,title="Mon titre"){
split.screen(c(2,1))
screen(1)
plot(ts,main=title)
split.screen(c(1,2),screen=2)
screen(3)
acf(ts,lag.max = lag.max,main="ACF",na.action = na.pass)
screen(4)
pacf(ts,lag.max = lag.max,main="pACF",na.action = na.pass)
close.screen(all = TRUE)
}
data <- read.csv("Donnees.csv", sep = ";", header = T)
names(data) <- c("Periode",
"Production.Totale.Brute",
"Production.Totale.Nette",
"Production.Primaire.Brute",
"Production.Primaire.Nette",
"Production.Nucleaire.Brute",
"Production.Nucleaire.Nette",
"Production.Hydraulique.Brute",
"Production.Hydraulique.Nette",
"Production.Eolienne.Brute",
"Production.Eolienne.Nette",
"Production.Photovoltaique.Brute",
"Production.Photovoltaique.Nette",
"Production.Thermique.Brute",
"Production.Thermique.Nette",
"Electricite.absorbee.pour.les.pompages.(en.GWh)",
"Importations",
"Exportations",
"Energie.appelee.reelle.yc.pertes",
"Livraisons.BasseTension",
"Livraisons.MoyenneTension",
"Livraisons.HauteTension",
"Energie.appelee.reelle.yc.pertes.corrigee.du.climat",
"Livraisons.BasseTension.CorClimat",
"Livraisons.MoyenneTension.CorClimat",
"Consommation.Primaire",
"Consommation.Primaire.CorClimat",
"Puissance.maximale.appelee",
"Indice.Climatique"
)
ts <- list(prod.totale = ts(data$Production.Totale.Brute, frequency = 12, start = c(1981, 1), end = c(2017, 11)),
import = ts(data$Importations, frequency = 12,  start = c(1981,1), end = c(2017, 11)),
photo = ts(data$Production.Photovoltaique.Brute[data$Production.Photovoltaique.Brute!=0], frequency = 12, start = c(2011,1), end = c(2017,11)))
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
plot(logphoto.decompose)  # Saisonnalité 12
acf(logphoto) #Pas stationnaire
pacf(logphoto)
ts.affichage(logphoto)
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
logModel <- SARIMA210110
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel <- predict.SARIMA210110
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
LogToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
rm(logModel)
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
plot(logphoto.decompose)  # Saisonnalité 12
acf(logphoto) #Pas stationnaire
pacf(logphoto)
ts.affichage(logphoto)
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
LogToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-LogInfError)
return (logModel)
}
LogToExp<-function(logModel)
{
logSup <- logModel$upper
logInf <- logModel$lower
logMean <- logModel$mean
logSupError <- logSup - logMean
logInfError <- logMean - logInf
mean<- exp(logModel$mean)
logModel$x <- exp(logModel$x)
logModel$fitted <- exp(logModel$fitted)
logModel$mean <- mean
logModel$upper <- mean*(1+logSupError) #cas particulier de formule dans le cas log->exp
logModel$lower <- mean*(1-logInfError)
return (logModel)
}
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
plot(logphoto.decompose)  # Saisonnalité 12
acf(logphoto) #Pas stationnaire
pacf(logphoto)
ts.affichage(logphoto)
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
#On passe repasse à l'exponentiel
predict.SARIMA210110$lower <- exp(predict.SARIMA210110$lower)
predict.SARIMA210110$upper <- exp(predict.SARIMA210110$upper)
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
acf(logphoto) #Pas stationnaire
plot(logphoto.decompose)  # Saisonnalité 12
pacf(logphoto)
ts.affichage(logphoto)
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
plot(predict.SARIMA210110)
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
#On passe repasse à l'exponentiel
predict.SARIMA210110$lower <- exp(predict.SARIMA210110$lower)
predict.SARIMA210110$upper <- exp(predict.SARIMA210110$upper)
predict.SARIMA210110$x <- exp(predict.SARIMA210110$x)
predict.SARIMA210110$fitted <- exp(predict.SARIMA210110$fitted)
predict.SARIMA210110$mean <- exp(predict.SARIMA210110$mean)
plot(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
plot(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
plot(logphoto.decompose)  # Saisonnalité 12
acf(logphoto) #Pas stationnaire
pacf(logphoto)
ts.affichage(logphoto)
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----------- SARIMA (2,1,0)(1,1,0) ------------
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
#On identifie alors les composantes:
# ordre de différentiation: d = 1
# composante AR : q = 1 - En effet, l'ACF decroit exponentiellement vite et les autocorrelations sont nulles après 1
# composante MA : p = 0 - Il n'y a apparemment pas de composante en MA à retenir (A vérifier - tester)
# Y a-t-il des composantes saisonnières ? TODO
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#On passe repasse à l'exponentiel
predict.SARIMA210110$lower <- exp(predict.SARIMA210110$lower)
predict.SARIMA210110$upper <- exp(predict.SARIMA210110$upper)
predict.SARIMA210110$x <- exp(predict.SARIMA210110$x)
predict.SARIMA210110$fitted <- exp(predict.SARIMA210110$fitted)
predict.SARIMA210110$mean <- exp(predict.SARIMA210110$mean)
plot(predict.SARIMA210110)
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
plot(ts$photo)            # Modèle à priori multiplicatif
logphoto <- log(ts$photo) # On passe au log pour homogeneiser la variance et passer dans un modèle additif
plot(logphoto)            # Ok , ca semble additif
logphoto.decompose<-decompose(logphoto)
plot(logphoto.decompose)  # Saisonnalité 12
acf(logphoto) #Pas stationnaire
pacf(logphoto)
ts.affichage(logphoto)
kpss.test(logphoto.decompose$random) #la partie aleatoire de la série décomposée est stationnaire
#----------- SARIMA (2,1,0)(1,1,0) ------------
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 1) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
#On identifie alors les composantes:
# ordre de différentiation: d = 1
# composante AR : q = 1 - En effet, l'ACF decroit exponentiellement vite et les autocorrelations sont nulles après 1
# composante MA : p = 0 - Il n'y a apparemment pas de composante en MA à retenir (A vérifier - tester)
# Y a-t-il des composantes saisonnières ? TODO
SARIMA210110<-arima(logphoto,order = c(2,1,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA210110$coef)/sqrt(diag(SARIMA210110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA210110<-forecast(SARIMA210110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA210110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA210110$residuals) #pacf un peu limite...
predict.SARIMA210110.residuals.norm<- (residuals(predict.SARIMA210110)-mean(residuals(predict.SARIMA210110)))/sd(residuals(predict.SARIMA210110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA210110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA210110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA210110.residuals.norm) # OK
kpss.test(predict.SARIMA210110.residuals.norm) # OK
shapiro.test(predict.SARIMA210110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA210110 <- LogToExp(predict.SARIMA210110)
plot(exp.predict.SARIMA210110)
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 2) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA620110<-arima(logphoto,order = c(6,2,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA620110$coef)/sqrt(diag(SARIMA620110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA620110<-forecast(SARIMA620110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA620110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA620110$residuals) #pacf un peu limite...
predict.SARIMA620110.residuals.norm<- (residuals(predict.SARIMA620110)-mean(residuals(predict.SARIMA620110)))/sd(residuals(predict.SARIMA620110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA620110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA620110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA620110.residuals.norm) # OK
kpss.test(predict.SARIMA620110.residuals.norm) # OK
shapiro.test(predict.SARIMA620110.residuals.norm) # KO
#---- Affichage ----
exp.predict.SARIMA620110 <- LogToExp(predict.SARIMA620110)
plot(exp.predict.SARIMA620110)
#----------- SARIMA (5,2,0)(1,1,0) ------------
#----- Identification des ordres -----
logphoto %>% diff(.,differences = 2) %>% diff(.,lag=12) %T>% ts.affichage(.,"photovolatique d=1, D=1") %>% kpss.test(.) #KPSS OK - EN FAIT JE COMPREND PAS CA
SARIMA520110<-arima(logphoto,order = c(5,2,0), seasonal = c(1,1,0)) #1 correspond à D=12 dans la seasonnalité
#----- Significativité des paramètres ----
(1-pnorm(abs(SARIMA520110$coef)/sqrt(diag(SARIMA520110$var.coef))))*2 <= 0.05 # OK
#----- Prévision ------
predict.SARIMA520110<-forecast(SARIMA520110)
#----- Vérification des hypothèses ----
acf(predict.SARIMA520110$residuals) #les résidus ont l'air stationnaires
pacf(predict.SARIMA520110$residuals) #pacf un peu limite...
predict.SARIMA520110.residuals.norm<- (residuals(predict.SARIMA520110)-mean(residuals(predict.SARIMA520110)))/sd(residuals(predict.SARIMA520110) )
#Test de normalité des résidus: Kolmogorov Smirnov
qqnorm(predict.SARIMA520110.residuals.norm)
abline(0,1, col = "red")
ks.test(predict.SARIMA520110.residuals.norm, 'pnorm') # OK (p-value>0.05)
#Test d'absence de correlation des résidus
Box.test(predict.SARIMA520110.residuals.norm) # OK
kpss.test(predict.SARIMA520110.residuals.norm) # OK
shapiro.test(predict.SARIMA520110.residuals.norm) # KO
#---- Affichage ----
#---- Affichage ----
exp.predict.SARIMA520110 <- LogToExp(predict.SARIMA520110)
plot(exp.predict.SARIMA520110)
